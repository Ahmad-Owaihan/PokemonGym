// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonGym.API.Data;

namespace PokemonGym.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181202143554_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("PokemonGym.API.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Score");

                    b.Property<int>("TournamentId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.HasIndex("UserId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("PokemonGym.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("PokemonGym.API.Models.ScoreNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Points");

                    b.Property<int>("ScoreRowId");

                    b.HasKey("Id");

                    b.HasIndex("ScoreRowId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("PokemonGym.API.Models.ScoreRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ParticipantId");

                    b.Property<int>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("TournamentId");

                    b.ToTable("ScoreRows");
                });

            modelBuilder.Entity("PokemonGym.API.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsStarted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("PokemonGym.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PokemonGym.API.Models.Participant", b =>
                {
                    b.HasOne("PokemonGym.API.Models.Tournament", "Tournament")
                        .WithMany("Participants")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonGym.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PokemonGym.API.Models.Photo", b =>
                {
                    b.HasOne("PokemonGym.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PokemonGym.API.Models.ScoreNumber", b =>
                {
                    b.HasOne("PokemonGym.API.Models.ScoreRow", "ScoreRow")
                        .WithMany("Row")
                        .HasForeignKey("ScoreRowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PokemonGym.API.Models.ScoreRow", b =>
                {
                    b.HasOne("PokemonGym.API.Models.Participant", "Participant")
                        .WithMany("Scores")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonGym.API.Models.Tournament", "Tournament")
                        .WithMany("Scores")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
